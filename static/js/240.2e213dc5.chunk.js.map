{"version":3,"file":"static/js/240.2e213dc5.chunk.js","mappings":"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","sources":["modules/data/target..js","modules/data/kanal_sbyta.js","modules/data/sales.ts","modules/data/rp.js","components/Filters/styles.tsx","components/Filters/Filters.tsx","components/Sales/styled.ts","components/Sales/Card.tsx","components/Sales/SalesList.tsx"],"sourcesContent":["export const targets = [\n  {\n    name: 'привлечение новых и потерянных партнеров (статус I и T)',\n    id: 1,\n  },\n\n  {\n    name: 'удержание рисковых партнеров',\n    id: 2,\n  },\n  {\n    name: 'привлечение партнеров потерянных по новому признаку сбыта',\n    id: 3,\n  },\n];\n","export const channels = [\n  {\n    name: 'Массовый',\n    id: 1,\n  },\n\n  {\n    name: 'Премиальный',\n    id: 2,\n  },\n  {\n    name: 'Конкурсный',\n    id: 3,\n  },\n  {\n    name: 'E-commerce B2B',\n    id: 4,\n  },\n  {\n    name: 'E-commerce B2C',\n    id: 5,\n  },\n];\n","export interface SaleInterface {\n  id: Number;\n  title: String;\n  gift: String;\n  sum: Number;\n  targetId: Number;\n  kanalId: number;\n}\n\nexport const salesArray = [\n  {\n    id: 1,\n    title: 'Spring Sale',\n    gift: 'Free tote bag',\n    sum: 15000,\n    targetId: 1,\n    kanalId: 1,\n    // regionGroupId: 1, чтобы отображать регион\n  },\n  {\n    id: 2,\n    title: 'Summer Sale',\n    gift: '50% off coupon',\n    sum: 25000,\n    targetId: 1,\n    kanalId: 2,\n  },\n  {\n    id: 3,\n    title: 'Fall Sale',\n    gift: 'Free shipping',\n    sum: 30000,\n    targetId: 1,\n    kanalId: 3,\n  },\n  {\n    id: 4,\n    title: 'Winter Sale',\n    gift: 'Free gift wrapping',\n    sum: 15000,\n    targetId: 1,\n    kanalId: 4,\n  },\n  {\n    id: 5,\n    title: 'Back to School Sale',\n    gift: 'Free notebook',\n    sum: 25000,\n    targetId: 1,\n    kanalId: 5,\n  },\n  {\n    id: 6,\n    title: 'Clearance Event',\n    gift: 'Extra 20% off clearance items',\n    sum: 30000,\n    targetId: 2,\n    kanalId: 1,\n  },\n  {\n    id: 7,\n    title: 'End of Season Sale',\n    gift: 'Free socks',\n    sum: 15000,\n    targetId: 2,\n    kanalId: 2,\n  },\n  {\n    id: 8,\n    title: 'Black Friday Sale',\n    gift: 'Doorbuster deals',\n    sum: 25000,\n    targetId: 2,\n    kanalId: 3,\n  },\n  {\n    id: 9,\n    title: 'Cyber Monday Deals',\n    gift: 'Free tech accessory',\n    sum: 30000,\n    targetId: 2,\n    kanalId: 4,\n  },\n  {\n    id: 10,\n    title: 'Holiday Extravaganza',\n    gift: 'Buy one get one free',\n    sum: 15000,\n    targetId: 2,\n    kanalId: 5,\n  },\n\n  {\n    id: 11,\n    title: \"New Year's Sale\",\n    gift: 'Free calendar',\n    sum: 25000,\n    targetId: 1,\n    kanalId: 1,\n  },\n  {\n    id: 12,\n    title: \"President's Day Sale\",\n    gift: 'Extra 15% off with code',\n    sum: 30000,\n    targetId: 1,\n    kanalId: 2,\n  },\n  {\n    id: 13,\n    title: 'Easter Weekend Sale',\n    gift: 'Free chocolate bunny',\n    sum: 15000,\n    targetId: 1,\n    kanalId: 3,\n  },\n  {\n    id: 14,\n    title: 'Memorial Day Blowout',\n    gift: 'Free sunglasses',\n    sum: 25000,\n    targetId: 1,\n    kanalId: 4,\n  },\n  {\n    id: 15,\n    title: 'Independence Day Savings',\n    gift: 'Free fireworks',\n    sum: 30000,\n    targetId: 3,\n    kanalId: 1,\n  },\n  {\n    id: 16,\n    title: 'Labor Day Clearance',\n    gift: 'Extra 25% off clearance items',\n    sum: 15000,\n    targetId: 3,\n    kanalId: 2,\n  },\n  {\n    id: 17,\n    title: 'Halloween Spooktacular',\n    gift: 'Free costume accessory',\n    sum: 25000,\n    targetId: 3,\n    kanalId: 3,\n  },\n  {\n    id: 18,\n    title: 'Veterans Day Discounts',\n    gift: '10% off for veterans',\n    sum: 30000,\n    targetId: 3,\n    kanalId: 4,\n  },\n  {\n    id: 19,\n    title: 'Thanksgiving Sale',\n    gift: 'Free turkey',\n    sum: 15000,\n    targetId: 3,\n    kanalId: 5,\n  },\n  {\n    id: 20,\n    title: 'Year-End Extravaganza',\n    gift: 'Free champagne',\n    sum: 25000,\n    targetId: 3,\n    kanalId: 5,\n  },\n];\n","export const regions = [\n  {\n    id: 1,\n    name: 'Юг',\n    rpArray: [\n      { name: 'Краснодар', id: 1 },\n      { name: 'Волгоград', id: 2 },\n      { name: 'Ростов-Дон', id: 3 },\n      { name: 'Саратов', id: 4 },\n    ],\n  },\n  {\n    id: 2,\n    name: 'Урал',\n    rpArray: [\n      { name: 'Екатеринбург', id: 1 },\n      { name: 'Челябинск', id: 2 },\n      { name: 'Пермь', id: 3 },\n    ],\n  },\n  {\n    id: 3,\n    name: 'Сибирь',\n    rpArray: [\n      { name: 'Новосибирск', id: 1 },\n      { name: 'Омск', id: 2 },\n    ],\n  },\n  {\n    id: 4,\n    name: 'Приволжье',\n    rpArray: [\n      { name: 'Нижний Новгород', id: 1 },\n      { name: 'Казань', id: 2 },\n      { name: 'Самара', id: 3 },\n      { name: 'Уфа', id: 4 },\n    ],\n  },\n  {\n    id: 5,\n    name: 'Москва',\n    rpArray: [{ name: 'Москва', id: 1 }],\n  },\n  {\n    id: 6,\n    name: 'ЦФО',\n    rpArray: [{ name: 'ЦФО', id: 1 }],\n  },\n  {\n    id: 7,\n    name: 'Северо-Запад',\n    rpArray: [{ name: 'Санкт-Петербург', id: 1 }],\n  },\n];\n\nexport const regionGroups = [\n  {\n    id: 1,\n    name: 'Краснодар;Екатеринбург;Челябинск;Новосибирск;Казань;Нижний Новгород',\n  },\n  {\n    id: 2,\n    name: 'Волгоград;Ростов-Дон;Самара;Уфа',\n  },\n  {\n    id: 3,\n    name: 'Саратов;Пермь;Омск',\n  },\n  {\n    id: 4,\n    name: 'Москва;Санкт-Петербург;ЦФО',\n  },\n];\n\nexport const cityNames = [\n  {\n    name: 'Краснодар',\n    id: 1,\n    group: 1,\n  },\n\n  {\n    name: 'Волгоград',\n    id: 2,\n    group: 2,\n  },\n\n  {\n    name: 'Ростов-Дон',\n    id: 3,\n    group: 2,\n  },\n\n  {\n    name: 'Саратов',\n    id: 4,\n    group: 3,\n  },\n\n  {\n    name: 'Екатеринбург',\n    id: 5,\n    group: 1,\n  },\n\n  {\n    name: 'Челябинск',\n    id: 6,\n    group: 1,\n  },\n\n  {\n    name: 'Пермь',\n    id: 7,\n    group: 3,\n  },\n\n  {\n    name: 'Новосибирск',\n    id: 8,\n    group: 1,\n  },\n\n  {\n    name: 'Омск',\n    id: 9,\n    group: 3,\n  },\n\n  {\n    name: 'Нижний Новгород',\n    id: 10,\n    group: 1,\n  },\n\n  {\n    name: 'Казань',\n    id: 11,\n    group: 1,\n  },\n\n  {\n    name: 'Самара',\n    id: 12,\n    group: 2,\n  },\n\n  {\n    name: 'Уфа',\n    id: 13,\n    group: 2,\n  },\n\n  {\n    name: 'Москва',\n    id: 14,\n    group: 4,\n  },\n\n  {\n    name: 'ЦФО',\n    id: 15,\n    group: 4,\n  },\n\n  {\n    name: 'Санкт-Петербург',\n    id: 16,\n    group: 4,\n  },\n];\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  // border: 1px solid red;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  padding: 10px;\n\n  label {\n    margin-bottom: 10px;\n  }\n\n  input {\n    margin-bottom: 5px;\n  }\n`;\n","import React, { FC, useCallback, useState } from 'react';\n\nimport { targets } from '../../modules/data/target.';\nimport { channels } from '../../modules/data/kanal_sbyta';\nimport { brArr } from '../../modules/data/br';\nimport { salesArray } from '../../modules/data/sales';\nimport { regions, cityNames, regionGroups } from '../../modules/data/rp';\n\nimport Table from '../Table/Table';\nimport SalesList from '../Sales/SalesList';\n\nimport { Wrapper } from './styles';\n\ninterface Props {\n  state?: string;\n}\n\nconst Filters: FC<Props> = () => {\n  const [selectedTargets, setSelectedTargets] = useState<number[]>([]);\n  const [selectedChannels, setSelectedChannels] = useState<number[]>([]);\n  const [selectedCity, setSelectedCity] = useState<number[]>([]);\n\n  const handleTargetChange = (id: number) => {\n    if (selectedTargets.includes(id)) {\n      setSelectedTargets(selectedTargets.filter((targetId) => targetId !== id));\n    } else {\n      setSelectedTargets([...selectedTargets, id]);\n    }\n  };\n\n  const handleChannelChange = (id: number) => {\n    if (selectedChannels.includes(id)) {\n      setSelectedChannels(\n        selectedChannels.filter((channelId) => channelId !== id)\n      );\n    } else {\n      setSelectedChannels([...selectedChannels, id]);\n    }\n  };\n\n  const filteredSales = salesArray.filter(\n    (sale) =>\n      selectedTargets.includes(sale.targetId) &&\n      selectedChannels.includes(sale.kanalId)\n  );\n\n  return (\n    <div>\n      <Wrapper>\n        <label>Выберите цель акции:</label>\n        {targets.map((el) => (\n          <div key={el.id}>\n            <input\n              type='checkbox'\n              id={`${el?.id}`}\n              name={el?.name}\n              value={el?.id}\n              checked={selectedTargets.includes(el.id)}\n              onChange={() => handleTargetChange(el.id)}\n            />\n            <label htmlFor='subscribeNews'>{el?.name}</label>\n          </div>\n        ))}\n      </Wrapper>\n      <Wrapper>\n        <label>Выберите канал сбыта:</label>\n        {channels.map((el) => (\n          <div key={el.id}>\n            <input\n              type='checkbox'\n              id={`${el?.id}`}\n              name={el?.name}\n              value={el?.id}\n              checked={selectedChannels.includes(el.id)}\n              onChange={() => handleChannelChange(el.id)}\n            />\n            <label htmlFor='subscribeNews'>{el?.name}</label>\n          </div>\n        ))}\n      </Wrapper>\n      <Wrapper>\n        {/* <label>Выберите регион проведения (РП):</label> */}\n        <label>Выберите группу региона:</label>\n        {regionGroups.map((el) => (\n          <div key={el.id}>\n            <input\n              type='checkbox'\n              id={`${el?.id}`}\n              name={el?.name}\n              value={el?.id}\n            />\n            <label htmlFor='subscribeNews'>{el?.name}</label>\n          </div>\n        ))}\n      </Wrapper>\n      <div>\n        {/* <Table\n          targets={targets}\n          channels={channels}\n          filteredSales={filteredSales}\n          cityNames={cityNames}\n        /> */}\n        <SalesList\n          filteredSales={filteredSales}\n          selectedChannels={selectedChannels}\n          selectedTargets={selectedTargets}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Filters;\n","import styled from 'styled-components';\nimport { Card as MuiCard } from '@mui/material';\n\nexport const Card = styled(MuiCard)`\n  &.MuiPaper-root {\n    // border: 2px solid #da1f2a; // aliceblue // #dadada45\n    width: 95%;\n    max-width: 500px;\n    margin: 5px;\n  }\n`;\n","import React, { FC } from 'react';\nimport Box from '@mui/material/Box';\n// import Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nimport { SaleInterface } from 'src/modules/data/sales';\n\nimport { Card } from './styled';\n\ninterface Props {\n  selectedChannels?: any;\n  selectedTargets?: any;\n}\n\ntype UniProps = Props & SaleInterface;\n\nconst SaleCard: FC<UniProps> = (props: UniProps) => {\n  console.log('selectedChannels:', props.selectedChannels);\n  console.log('selectedTargets:', props.selectedTargets);\n  return (\n    <Box sx={{ minWidth: 275 }}>\n      <Card variant='outlined'>\n        <CardContent>\n          <Typography gutterBottom sx={{ fontSize: 14 }} color='text.secondary'>\n            скоро конец акции!\n          </Typography>\n          <Typography variant='h5' component='div'>\n            • {props.title} •\n          </Typography>\n          <Typography sx={{ mb: 1.5 }} color='text.secondary'>\n            Приобретите продукции на 1000 рублей в физических магазинах Комус и\n            получите в подарок сумку-шоппер.\n          </Typography>\n          <Typography variant='body1'>\n            Сроки проведения акции:\n            <br />\n            23.05.2024 - 11.11.2024\n          </Typography>\n          <Typography variant='body2'>\n            Подарок:\n            <br />\n            {props.gift}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size='small'>Узнать больше об акции</Button>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n};\n\nexport default SaleCard;\n","import React, { FC, useState } from 'react';\nimport SaleCard from './Card';\n\ninterface Props {\n  filteredSales?: any;\n  selectedTargets?: any;\n  selectedChannels?: any;\n}\n\nconst SalesList: FC<Props> = ({\n  filteredSales,\n  selectedTargets,\n  selectedChannels,\n}) => {\n  // const [isArr, setIsArr] = useState(true);\n  //  [...new Array(5)];\n  return (\n    <div>\n      SALE LIST\n      <div>\n        {filteredSales?.length ? (\n          filteredSales?.map((el: any) => (\n            <SaleCard\n              key={el.id}\n              {...el}\n              selectedChannels={selectedChannels}\n              selectedTargets={selectedTargets}\n            />\n          ))\n        ) : (\n          <>По результатам вашего поиска ничего не найдено</>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SalesList;\n"],"names":["targets","name","id","channels","salesArray","title","gift","sum","targetId","kanalId","regionGroups","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Filters","selectedTargets","setSelectedTargets","useState","selectedChannels","setSelectedChannels","selectedCity","setSelectedCity","filteredSales","filter","sale","includes","_jsxs","children","_jsx","map","el","type","concat","value","checked","onChange","handleTargetChange","htmlFor","handleChannelChange","channelId","SalesList","Card","MuiCard","props","console","log","Box","sx","minWidth","variant","CardContent","Typography","gutterBottom","fontSize","color","component","mb","CardActions","Button","size","_ref","length","SaleCard","_Fragment"],"sourceRoot":""}